project('nanomsg', 'c')
cm_dist = custom_target(
  'cm_dist',
  output : ['cm_dist.h'],
  input : [],
  command : [
    '/usr/local/bin/meson',
    '--internal',
    'cmake_run_ctgt',
    '-o',
    '@OUTPUT@',
    '-d',
    '/home/pi/Public/Criterion/build/subprojects/nanomsg/__CMake_build',
    '/usr/bin/ninja',
    'package_source',
    ';;;'
  ],
  depends : []
)
cm_nanomsg_dir = include_directories('__CMake_build', '.')
cm_nanomsg_sys = include_directories(is_system : true)
cm_nanomsg_inc = [cm_nanomsg_dir, cm_nanomsg_sys]
cm_nanomsg_src = files(
  'src/core/ep.c',
  'src/core/global.c',
  'src/core/pipe.c',
  'src/core/poll.c',
  'src/core/sock.c',
  'src/core/sockbase.c',
  'src/core/symbol.c',
  'src/aio/ctx.c',
  'src/aio/fsm.c',
  'src/aio/pool.c',
  'src/aio/timer.c',
  'src/aio/timerset.c',
  'src/aio/usock.c',
  'src/aio/worker.c',
  'src/utils/alloc.c',
  'src/utils/atomic.c',
  'src/utils/chunk.c',
  'src/utils/chunkref.c',
  'src/utils/clock.c',
  'src/utils/closefd.c',
  'src/utils/efd.c',
  'src/utils/err.c',
  'src/utils/hash.c',
  'src/utils/list.c',
  'src/utils/msg.c',
  'src/utils/condvar.c',
  'src/utils/mutex.c',
  'src/utils/once.c',
  'src/utils/queue.c',
  'src/utils/random.c',
  'src/utils/sem.c',
  'src/utils/sleep.c',
  'src/utils/strcasecmp.c',
  'src/utils/strcasestr.c',
  'src/utils/strncasecmp.c',
  'src/utils/thread.c',
  'src/utils/wire.c',
  'src/devices/device.c',
  'src/protocols/utils/dist.c',
  'src/protocols/utils/excl.c',
  'src/protocols/utils/fq.c',
  'src/protocols/utils/lb.c',
  'src/protocols/utils/priolist.c',
  'src/protocols/bus/bus.c',
  'src/protocols/bus/xbus.c',
  'src/protocols/pipeline/push.c',
  'src/protocols/pipeline/pull.c',
  'src/protocols/pipeline/xpull.c',
  'src/protocols/pipeline/xpush.c',
  'src/protocols/pair/pair.c',
  'src/protocols/pair/xpair.c',
  'src/protocols/pubsub/pub.c',
  'src/protocols/pubsub/sub.c',
  'src/protocols/pubsub/trie.c',
  'src/protocols/pubsub/xpub.c',
  'src/protocols/pubsub/xsub.c',
  'src/protocols/reqrep/req.c',
  'src/protocols/reqrep/rep.c',
  'src/protocols/reqrep/task.c',
  'src/protocols/reqrep/xrep.c',
  'src/protocols/reqrep/xreq.c',
  'src/protocols/survey/respondent.c',
  'src/protocols/survey/surveyor.c',
  'src/protocols/survey/xrespondent.c',
  'src/protocols/survey/xsurveyor.c',
  'src/transports/utils/backoff.c',
  'src/transports/utils/dns.c',
  'src/transports/utils/iface.c',
  'src/transports/utils/literal.c',
  'src/transports/utils/port.c',
  'src/transports/utils/streamhdr.c',
  'src/transports/utils/base64.c',
  'src/transports/inproc/binproc.c',
  'src/transports/inproc/cinproc.c',
  'src/transports/inproc/inproc.c',
  'src/transports/inproc/ins.c',
  'src/transports/inproc/msgqueue.c',
  'src/transports/inproc/sinproc.c',
  'src/transports/ipc/aipc.c',
  'src/transports/ipc/bipc.c',
  'src/transports/ipc/cipc.c',
  'src/transports/ipc/ipc.c',
  'src/transports/ipc/sipc.c',
  'src/transports/tcp/atcp.c',
  'src/transports/tcp/btcp.c',
  'src/transports/tcp/ctcp.c',
  'src/transports/tcp/stcp.c',
  'src/transports/tcp/tcp.c',
  'src/transports/ws/aws.c',
  'src/transports/ws/bws.c',
  'src/transports/ws/cws.c',
  'src/transports/ws/sws.c',
  'src/transports/ws/ws.c',
  'src/transports/ws/ws_handshake.c',
  'src/transports/ws/sha1.c',
  'src/aio/poller.c',
  'src/nn.h',
  'src/inproc.h',
  'src/ipc.h',
  'src/tcp.h',
  'src/ws.h',
  'src/pair.h',
  'src/pubsub.h',
  'src/reqrep.h',
  'src/pipeline.h',
  'src/survey.h',
  'src/bus.h',
  'src/core/ep.h',
  'src/core/global.h',
  'src/core/sock.h',
  'src/aio/ctx.h',
  'src/aio/fsm.h',
  'src/aio/pool.h',
  'src/aio/timer.h',
  'src/aio/timerset.h',
  'src/aio/usock.h',
  'src/aio/worker.h',
  'src/utils/alloc.h',
  'src/utils/atomic.h',
  'src/utils/attr.h',
  'src/utils/chunk.h',
  'src/utils/chunkref.h',
  'src/utils/clock.h',
  'src/utils/closefd.h',
  'src/utils/cont.h',
  'src/utils/efd.h',
  'src/utils/err.h',
  'src/utils/fast.h',
  'src/utils/fd.h',
  'src/utils/hash.h',
  'src/utils/list.h',
  'src/utils/msg.h',
  'src/utils/condvar.h',
  'src/utils/mutex.h',
  'src/utils/once.h',
  'src/utils/queue.h',
  'src/utils/random.h',
  'src/utils/sem.h',
  'src/utils/sleep.h',
  'src/utils/strcasecmp.h',
  'src/utils/strcasestr.h',
  'src/utils/strncasecmp.h',
  'src/utils/thread.h',
  'src/utils/wire.h',
  'src/devices/device.h',
  'src/protocols/utils/dist.h',
  'src/protocols/utils/excl.h',
  'src/protocols/utils/fq.h',
  'src/protocols/utils/lb.h',
  'src/protocols/utils/priolist.h',
  'src/protocols/bus/xbus.h',
  'src/protocols/pipeline/xpull.h',
  'src/protocols/pipeline/xpush.h',
  'src/protocols/pair/xpair.h',
  'src/protocols/pubsub/trie.h',
  'src/protocols/pubsub/xpub.h',
  'src/protocols/pubsub/xsub.h',
  'src/protocols/reqrep/req.h',
  'src/protocols/reqrep/rep.h',
  'src/protocols/reqrep/task.h',
  'src/protocols/reqrep/xrep.h',
  'src/protocols/reqrep/xreq.h',
  'src/protocols/survey/xrespondent.h',
  'src/protocols/survey/xsurveyor.h',
  'src/transports/utils/backoff.h',
  'src/transports/utils/dns.h',
  'src/transports/utils/dns_getaddrinfo.h',
  'src/transports/utils/dns_getaddrinfo_a.h',
  'src/transports/utils/iface.h',
  'src/transports/utils/literal.h',
  'src/transports/utils/port.h',
  'src/transports/utils/streamhdr.h',
  'src/transports/utils/base64.h',
  'src/transports/inproc/binproc.h',
  'src/transports/inproc/cinproc.h',
  'src/transports/inproc/ins.h',
  'src/transports/inproc/msgqueue.h',
  'src/transports/inproc/sinproc.h',
  'src/transports/ipc/aipc.h',
  'src/transports/ipc/bipc.h',
  'src/transports/ipc/cipc.h',
  'src/transports/ipc/sipc.h',
  'src/transports/tcp/atcp.h',
  'src/transports/tcp/btcp.h',
  'src/transports/tcp/ctcp.h',
  'src/transports/tcp/stcp.h',
  'src/transports/ws/aws.h',
  'src/transports/ws/bws.h',
  'src/transports/ws/cws.h',
  'src/transports/ws/sws.h',
  'src/transports/ws/ws_handshake.h',
  'src/transports/ws/sha1.h',
  'src/aio/usock_posix.h',
  'src/aio/worker_posix.h',
  'src/utils/thread_posix.h',
  'src/aio/poller.h',
  'src/aio/poller_epoll.h',
  'src/utils/efd_eventfd.h'
)
cm_nanomsg = static_library(
  'cm_nanomsg',
  cm_nanomsg_src,
  install_dir : 'lib',
  install : true,
  link_args : ['-lpthread'],
  build_by_default : true,
  include_directories : cm_nanomsg_inc,
  c_args : [
    '-DNN_HAVE_ACCEPT4=1',
    '-DNN_HAVE_BACKTRACE=1',
    '-DNN_HAVE_CLOCK_GETTIME=1',
    '-DNN_HAVE_CLOCK_MONOTONIC=1',
    '-DNN_HAVE_EPOLL=1',
    '-DNN_HAVE_EVENTFD=1',
    '-DNN_HAVE_GCC_ATOMIC_BUILTINS',
    '-DNN_HAVE_GETADDRINFO_A=1',
    '-DNN_HAVE_LIBNSL=1',
    '-DNN_HAVE_LINUX',
    '-DNN_HAVE_MSG_CONTROL=1',
    '-DNN_HAVE_PIPE2=1',
    '-DNN_HAVE_PIPE=1',
    '-DNN_HAVE_POLL=1',
    '-DNN_HAVE_SEMAPHORE',
    '-DNN_HAVE_SEMAPHORE_PTHREAD=1',
    '-DNN_HAVE_SOCKETPAIR=1',
    '-DNN_HAVE_UNIX_SOCKETS=1',
    '-DNN_MAX_SOCKETS=512',
    '-DNN_STATIC_LIB',
    '-DNN_USE_EPOLL',
    '-DNN_USE_EVENTFD',
    '-D_GNU_SOURCE',
    '-D_POSIX_PTHREAD_SEMANTICS',
    '-D_REENTRANT',
    '-D_THREAD_SAFE'
  ],
  objects : [],
  pic : true,
  link_with : [],
  override_options : []
)
cm_nanomsg_dep = declare_dependency(
  include_directories : cm_nanomsg_inc,
  link_args : ['-lpthread'],
  link_with : cm_nanomsg,
  compile_args : ['-DNN_STATIC_LIB']
)
